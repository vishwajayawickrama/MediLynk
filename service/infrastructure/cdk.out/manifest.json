{
  "version": "48.0.0",
  "artifacts": {
    "LocalStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/unknown-region",
      "properties": {
        "templateFile": "LocalStack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-${AWS::Region}",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-${AWS::Region}"
      },
      "metadata": {
        "/LocalStack/MediLynkVPC/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPC261892BF"
          }
        ],
        "/LocalStack/MediLynkVPC/PublicSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCPublicSubnet1Subnet40ACAF95"
          }
        ],
        "/LocalStack/MediLynkVPC/PublicSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCPublicSubnet1RouteTable01E96CE8"
          }
        ],
        "/LocalStack/MediLynkVPC/PublicSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCPublicSubnet1RouteTableAssociation0111D431"
          }
        ],
        "/LocalStack/MediLynkVPC/PublicSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCPublicSubnet1DefaultRoute546347A9"
          }
        ],
        "/LocalStack/MediLynkVPC/PublicSubnet1/EIP": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCPublicSubnet1EIP96A763E4"
          }
        ],
        "/LocalStack/MediLynkVPC/PublicSubnet1/NATGateway": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCPublicSubnet1NATGateway5D0E99FF"
          }
        ],
        "/LocalStack/MediLynkVPC/PublicSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCPublicSubnet2Subnet7C6C3997"
          }
        ],
        "/LocalStack/MediLynkVPC/PublicSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCPublicSubnet2RouteTable71C85E62"
          }
        ],
        "/LocalStack/MediLynkVPC/PublicSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCPublicSubnet2RouteTableAssociation93DE8216"
          }
        ],
        "/LocalStack/MediLynkVPC/PublicSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCPublicSubnet2DefaultRouteD34B7E1A"
          }
        ],
        "/LocalStack/MediLynkVPC/PublicSubnet2/EIP": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCPublicSubnet2EIP07F6B911"
          }
        ],
        "/LocalStack/MediLynkVPC/PublicSubnet2/NATGateway": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCPublicSubnet2NATGatewayCCE84F7B"
          }
        ],
        "/LocalStack/MediLynkVPC/PrivateSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCPrivateSubnet1SubnetCDF3EF43"
          }
        ],
        "/LocalStack/MediLynkVPC/PrivateSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCPrivateSubnet1RouteTable7FB83AD3"
          }
        ],
        "/LocalStack/MediLynkVPC/PrivateSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCPrivateSubnet1RouteTableAssociation22A15BB7"
          }
        ],
        "/LocalStack/MediLynkVPC/PrivateSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCPrivateSubnet1DefaultRoute6BF0A324"
          }
        ],
        "/LocalStack/MediLynkVPC/PrivateSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCPrivateSubnet2Subnet1E5B3C62"
          }
        ],
        "/LocalStack/MediLynkVPC/PrivateSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCPrivateSubnet2RouteTable3E6BAAFC"
          }
        ],
        "/LocalStack/MediLynkVPC/PrivateSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCPrivateSubnet2RouteTableAssociation6354DF85"
          }
        ],
        "/LocalStack/MediLynkVPC/PrivateSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCPrivateSubnet2DefaultRoute2494A639"
          }
        ],
        "/LocalStack/MediLynkVPC/IGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCIGW8710D608"
          }
        ],
        "/LocalStack/MediLynkVPC/VPCGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MediLynkVPCVPCGWB2E75BCA"
          }
        ],
        "/LocalStack/AuthServiceDB/SubnetGroup/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AuthServiceDBSubnetGroupCFE5A552"
          }
        ],
        "/LocalStack/AuthServiceDB/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AuthServiceDBSecurityGroupBE6D28EB"
          }
        ],
        "/LocalStack/AuthServiceDB/Secret/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LocalStackAuthServiceDBSecret0F3CB76B3fdaad7efa858a3daf9490cf0a702aeb"
          }
        ],
        "/LocalStack/AuthServiceDB/Secret/Attachment/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AuthServiceDBSecretAttachmentF30406A9"
          }
        ],
        "/LocalStack/AuthServiceDB/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AuthServiceDBC6B688BA"
          }
        ],
        "/LocalStack/PatientServiceDB/SubnetGroup/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PatientServiceDBSubnetGroupCED49D16"
          }
        ],
        "/LocalStack/PatientServiceDB/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PatientServiceDBSecurityGroup6B97C0E5"
          }
        ],
        "/LocalStack/PatientServiceDB/Secret/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LocalStackPatientServiceDBSecretB97925CC3fdaad7efa858a3daf9490cf0a702aeb"
          }
        ],
        "/LocalStack/PatientServiceDB/Secret/Attachment/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PatientServiceDBSecretAttachment90D77B03"
          }
        ],
        "/LocalStack/PatientServiceDB/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PatientServiceDBB84F9BF9"
          }
        ],
        "/LocalStack/AuthDBHealthCheck": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AuthDBHealthCheck"
          }
        ],
        "/LocalStack/PatientDBHealthCheck": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PatientDBHealthCheck"
          }
        ],
        "/LocalStack/MskCluster": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MskCluster"
          }
        ],
        "/LocalStack/MesiLynkEcsCluster/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MesiLynkEcsCluster9CF21FAE"
          }
        ],
        "/LocalStack/MesiLynkEcsCluster/DefaultServiceDiscoveryNamespace/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MesiLynkEcsClusterDefaultServiceDiscoveryNamespace44311830"
          }
        ],
        "/LocalStack/AuthServiceTask/TaskRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AuthServiceTaskTaskRoleE466B974"
          }
        ],
        "/LocalStack/AuthServiceTask/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AuthServiceTask82E6680D"
          }
        ],
        "/LocalStack/AuthServiceTask/ExecutionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AuthServiceTaskExecutionRoleA1258495"
          }
        ],
        "/LocalStack/AuthServiceTask/ExecutionRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AuthServiceTaskExecutionRoleDefaultPolicyF20AD0D3"
          }
        ],
        "/LocalStack/AuthServiceLogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AuthServiceLogGroup34125B38"
          }
        ],
        "/LocalStack/AuthServiceService": [
          {
            "type": "aws:cdk:warning",
            "data": "minHealthyPercent has not been configured so the default value of 50% is used. The number of running tasks will decrease below the desired count during deployments etc. See https://github.com/aws/aws-cdk/issues/31705 [ack: @aws-cdk/aws-ecs:minHealthyPercent]",
            "trace": [
              "Annotations.addMessage (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/core/lib/annotations.js:1:1978)",
              "Annotations.addWarningV2 (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/core/lib/annotations.js:1:896)",
              "new BaseService (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/aws-ecs/lib/base/base-service.js:1:8444)",
              "new FargateService2 (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/aws-ecs/lib/fargate/fargate-service.js:1:3888)",
              "new FargateService2 (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/core/lib/prop-injectable.js:1:488)",
              "Kernel._Kernel_create (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:548:25)",
              "Kernel.create (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:218:93)",
              "KernelHost.processRequest (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:15479:36)",
              "KernelHost.run (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:15439:22)",
              "Immediate._onImmediate (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:15440:45)",
              "process.processImmediate (node:internal/timers:491:21)"
            ]
          }
        ],
        "/LocalStack/AuthServiceService/Service": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AuthServiceServiceEAE613E3"
          }
        ],
        "/LocalStack/AuthServiceService/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AuthServiceServiceSecurityGroup0F66B23F"
          }
        ],
        "/LocalStack/BillingServiceTask/TaskRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BillingServiceTaskTaskRole7A547BBF"
          }
        ],
        "/LocalStack/BillingServiceTask/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BillingServiceTask30D9C66E"
          }
        ],
        "/LocalStack/BillingServiceTask/ExecutionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BillingServiceTaskExecutionRole11FE8DE2"
          }
        ],
        "/LocalStack/BillingServiceTask/ExecutionRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BillingServiceTaskExecutionRoleDefaultPolicy4F4033C9"
          }
        ],
        "/LocalStack/BillingServiceLogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BillingServiceLogGroupDD61E740"
          }
        ],
        "/LocalStack/BillingServiceService": [
          {
            "type": "aws:cdk:warning",
            "data": "minHealthyPercent has not been configured so the default value of 50% is used. The number of running tasks will decrease below the desired count during deployments etc. See https://github.com/aws/aws-cdk/issues/31705 [ack: @aws-cdk/aws-ecs:minHealthyPercent]",
            "trace": [
              "Annotations.addMessage (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/core/lib/annotations.js:1:1978)",
              "Annotations.addWarningV2 (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/core/lib/annotations.js:1:896)",
              "new BaseService (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/aws-ecs/lib/base/base-service.js:1:8444)",
              "new FargateService2 (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/aws-ecs/lib/fargate/fargate-service.js:1:3888)",
              "new FargateService2 (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/core/lib/prop-injectable.js:1:488)",
              "Kernel._Kernel_create (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:548:25)",
              "Kernel.create (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:218:93)",
              "KernelHost.processRequest (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:15479:36)",
              "KernelHost.run (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:15439:22)",
              "Immediate._onImmediate (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:15440:45)",
              "process.processImmediate (node:internal/timers:491:21)"
            ]
          }
        ],
        "/LocalStack/BillingServiceService/Service": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BillingServiceService4C0376F2"
          }
        ],
        "/LocalStack/BillingServiceService/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BillingServiceServiceSecurityGroup0FD51CAB"
          }
        ],
        "/LocalStack/AnalyticsServiceTask/TaskRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnalyticsServiceTaskTaskRole1ABB10CB"
          }
        ],
        "/LocalStack/AnalyticsServiceTask/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnalyticsServiceTaskC3AFBC47"
          }
        ],
        "/LocalStack/AnalyticsServiceTask/ExecutionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnalyticsServiceTaskExecutionRoleBAF654B2"
          }
        ],
        "/LocalStack/AnalyticsServiceTask/ExecutionRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnalyticsServiceTaskExecutionRoleDefaultPolicy99868928"
          }
        ],
        "/LocalStack/AnalyticsServiceLogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnalyticsServiceLogGroupBD82F12A"
          }
        ],
        "/LocalStack/AnalyticsServiceService": [
          {
            "type": "aws:cdk:warning",
            "data": "minHealthyPercent has not been configured so the default value of 50% is used. The number of running tasks will decrease below the desired count during deployments etc. See https://github.com/aws/aws-cdk/issues/31705 [ack: @aws-cdk/aws-ecs:minHealthyPercent]",
            "trace": [
              "Annotations.addMessage (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/core/lib/annotations.js:1:1978)",
              "Annotations.addWarningV2 (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/core/lib/annotations.js:1:896)",
              "new BaseService (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/aws-ecs/lib/base/base-service.js:1:8444)",
              "new FargateService2 (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/aws-ecs/lib/fargate/fargate-service.js:1:3888)",
              "new FargateService2 (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/core/lib/prop-injectable.js:1:488)",
              "Kernel._Kernel_create (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:548:25)",
              "Kernel.create (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:218:93)",
              "KernelHost.processRequest (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:15479:36)",
              "KernelHost.run (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:15439:22)",
              "Immediate._onImmediate (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:15440:45)",
              "process.processImmediate (node:internal/timers:491:21)"
            ]
          }
        ],
        "/LocalStack/AnalyticsServiceService/Service": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnalyticsServiceServiceDA0A70C5"
          }
        ],
        "/LocalStack/AnalyticsServiceService/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AnalyticsServiceServiceSecurityGroup7318888D"
          }
        ],
        "/LocalStack/PatientServiceTask/TaskRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PatientServiceTaskTaskRole4FB5B4E2"
          }
        ],
        "/LocalStack/PatientServiceTask/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PatientServiceTaskF865B565"
          }
        ],
        "/LocalStack/PatientServiceTask/ExecutionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PatientServiceTaskExecutionRole3782903B"
          }
        ],
        "/LocalStack/PatientServiceTask/ExecutionRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PatientServiceTaskExecutionRoleDefaultPolicy3866E91E"
          }
        ],
        "/LocalStack/PatientServiceLogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PatientServiceLogGroup4A5C3809"
          }
        ],
        "/LocalStack/PatientServiceService": [
          {
            "type": "aws:cdk:warning",
            "data": "minHealthyPercent has not been configured so the default value of 50% is used. The number of running tasks will decrease below the desired count during deployments etc. See https://github.com/aws/aws-cdk/issues/31705 [ack: @aws-cdk/aws-ecs:minHealthyPercent]",
            "trace": [
              "Annotations.addMessage (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/core/lib/annotations.js:1:1978)",
              "Annotations.addWarningV2 (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/core/lib/annotations.js:1:896)",
              "new BaseService (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/aws-ecs/lib/base/base-service.js:1:8444)",
              "new FargateService2 (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/aws-ecs/lib/fargate/fargate-service.js:1:3888)",
              "new FargateService2 (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/core/lib/prop-injectable.js:1:488)",
              "Kernel._Kernel_create (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:548:25)",
              "Kernel.create (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:218:93)",
              "KernelHost.processRequest (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:15479:36)",
              "KernelHost.run (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:15439:22)",
              "Immediate._onImmediate (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:15440:45)",
              "process.processImmediate (node:internal/timers:491:21)"
            ]
          }
        ],
        "/LocalStack/PatientServiceService/Service": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PatientServiceService6007FFED"
          }
        ],
        "/LocalStack/PatientServiceService/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PatientServiceServiceSecurityGroup4A861D81"
          }
        ],
        "/LocalStack/ApiGatewayTaskDefinition/TaskRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiGatewayTaskDefinitionTaskRole78FC06E2"
          }
        ],
        "/LocalStack/ApiGatewayTaskDefinition/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiGatewayTaskDefinitionBB9A2505"
          }
        ],
        "/LocalStack/ApiGatewayTaskDefinition/ExecutionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiGatewayTaskDefinitionExecutionRoleE78CB745"
          }
        ],
        "/LocalStack/ApiGatewayTaskDefinition/ExecutionRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiGatewayTaskDefinitionExecutionRoleDefaultPolicy3FBBB1F9"
          }
        ],
        "/LocalStack/ApiGatewayLogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiGatewayLogGroupA9770429"
          }
        ],
        "/LocalStack/ApiGatewayService/LB/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiGatewayServiceLB661D42EC"
          }
        ],
        "/LocalStack/ApiGatewayService/LB/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiGatewayServiceLBSecurityGroup0E508841"
          }
        ],
        "/LocalStack/ApiGatewayService/LB/SecurityGroup/to LocalStackApiGatewayServiceSecurityGroupA6856A2F:4004": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiGatewayServiceLBSecurityGrouptoLocalStackApiGatewayServiceSecurityGroupA6856A2F40042A2C5523"
          }
        ],
        "/LocalStack/ApiGatewayService/LB/PublicListener/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiGatewayServiceLBPublicListenerA86B9BC4"
          }
        ],
        "/LocalStack/ApiGatewayService/LB/PublicListener/ECSGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiGatewayServiceLBPublicListenerECSGroup0BFE5495"
          }
        ],
        "/LocalStack/ApiGatewayService/LoadBalancerDNS": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiGatewayServiceLoadBalancerDNS40D66446"
          }
        ],
        "/LocalStack/ApiGatewayService/ServiceURL": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiGatewayServiceServiceURL8E0540A6"
          }
        ],
        "/LocalStack/ApiGatewayService/Service": [
          {
            "type": "aws:cdk:warning",
            "data": "minHealthyPercent has not been configured so the default value of 50% is used. The number of running tasks will decrease below the desired count during deployments etc. See https://github.com/aws/aws-cdk/issues/31705 [ack: @aws-cdk/aws-ecs:minHealthyPercent]",
            "trace": [
              "Annotations.addMessage (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/core/lib/annotations.js:1:1978)",
              "Annotations.addWarningV2 (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/core/lib/annotations.js:1:896)",
              "new BaseService (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/aws-ecs/lib/base/base-service.js:1:8444)",
              "new FargateService2 (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/aws-ecs/lib/fargate/fargate-service.js:1:3888)",
              "new FargateService2 (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/core/lib/prop-injectable.js:1:488)",
              "new ApplicationLoadBalancedFargateService2 (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/aws-ecs-patterns/lib/fargate/application-load-balanced-fargate-service.js:1:4035)",
              "new ApplicationLoadBalancedFargateService2 (/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-kernel-b5m5H9/node_modules/aws-cdk-lib/core/lib/prop-injectable.js:1:488)",
              "Kernel._Kernel_create (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:548:25)",
              "Kernel.create (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:218:93)",
              "KernelHost.processRequest (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:15479:36)",
              "KernelHost.run (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:15439:22)",
              "Immediate._onImmediate (/private/var/folders/qs/gz5mqzl57l7__qhg_fn_lc1w0000gn/T/jsii-java-runtime3949724863686041942/lib/program.js:15440:45)",
              "process.processImmediate (node:internal/timers:491:21)"
            ]
          }
        ],
        "/LocalStack/ApiGatewayService/Service/Service": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiGatewayService4908847F"
          }
        ],
        "/LocalStack/ApiGatewayService/Service/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiGatewayServiceSecurityGroup867C9DB1"
          }
        ],
        "/LocalStack/ApiGatewayService/Service/SecurityGroup/from LocalStackApiGatewayServiceLBSecurityGroupA8FB7638:4004": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiGatewayServiceSecurityGroupfromLocalStackApiGatewayServiceLBSecurityGroupA8FB763840041EC488F1"
          }
        ]
      },
      "displayName": "LocalStack"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/aws-signer:signingProfileNamePassedToCfn": {
            "recommendedValue": true,
            "explanation": "Pass signingProfileName to CfnSigningProfile"
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:stackRelativeExports": {
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-ecs-patterns:secGroupsDisablesImplicitOpenListener": {
            "recommendedValue": true,
            "explanation": "Disable implicit openListener when custom security groups are provided"
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:checkSecretUsage": {
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:explicitStackTags": {
            "recommendedValue": true,
            "explanation": "When enabled, stack tags need to be assigned explicitly on a Stack."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs."
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration"
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function"
          }
        }
      }
    }
  },
  "minimumCliVersion": "2.1029.1"
}